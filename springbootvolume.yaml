apiVersion: apps/v1
kind: Deployment
metadata:
  name: springappi 
  namespace: test-ns  
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      labels:
        app: springapp
    spec:
      containers:
      - name: springbootcontainer
        image: nomrajdocker/spring-boot-mongo:1
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongosvc
        - name: MONGO_DB_USERNAME
          value: devdb
        - name: MONGO_DB_PASSWORD
          value: devdb@123        
---
apiVersion: v1 
kind: Service
metadata:
  name: springbootsvc
  namespace: test-ns 
  labels:
    app: springapp 
spec:
  type: NodePort
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080 
    nodePort: 30007 
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodb
  namespace: test-ns
spec:
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      name: springbootdb
      labels:
        app: mongo
    spec: 
      containers:
      - name: mongocontainer
        image: mongo 
        ports:
        - containerPort: 27017  
        env: 
        - name: MONGO_INITDB_ROOT_USERNAME
          value: devdb
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: devdb@123 
        volumeMounts:
        - name: mongodbvol
          mountPath: /data/db
      volumes:
      - name: mongodbvol
        hostPath: 
          path: /mongodata


---   
apiVersion: v1 
kind: Service
metadata: 
  name: mongosvc
  namespace: test-ns
spec: 
  type: NodePort 
  selector: 
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017
    nodePort: 30008 
